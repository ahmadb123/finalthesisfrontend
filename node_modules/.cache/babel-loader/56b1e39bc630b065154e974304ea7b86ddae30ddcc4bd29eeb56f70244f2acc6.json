{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../assets/styles/Account.css\";\nconst apiURL = \"http://localhost:8080\";\nfunction Account() {\n  _s();\n  // check if customer valid to access account page or edit account page- \n  // if not valid, redirect to login page\n  // first ask customer to enter username and password\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleEditAccount = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${apiURL}/api/auth/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.text();\n        navigate(\"/editAccount\");\n      } else if (response.status === 401) {\n        toast.error(\"Incorrect Password. Please try again.\");\n      } else {\n        const textError = await response.text();\n        toast.error(`Login failed: ${textError}`);\n      }\n    } catch (e) {\n      console.error(\"Error\", e);\n      toast.error(\"Error occurred logging in\");\n    }\n  };\n}\n_s(Account, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useState","useNavigate","Link","toast","ToastContainer","apiURL","Account","_s","username","setUsername","password","setPassword","handleEditAccount","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","text","navigate","status","error","textError","console","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/finalThesisFrontEnd/src/pages/Account.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../assets/styles/Account.css\";\n\n\nconst apiURL = \"http://localhost:8080\";\n\n\n\nfunction Account() {\n    // check if customer valid to access account page or edit account page- \n    // if not valid, redirect to login page\n    // first ask customer to enter username and password\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const handleEditAccount = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch(`${apiURL}/api/auth/login`, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ username, password }),\n            });\n            if (response.ok) {\n                const data = await response.text();\n                navigate(\"/editAccount\");\n            } else if (response.status === 401) {\n                toast.error(\"Incorrect Password. Please try again.\");\n            } else {\n                const textError = await response.text();\n                toast.error(`Login failed: ${textError}`);\n            }\n        } catch (e) {\n            console.error(\"Error\", e);\n            toast.error(\"Error occurred logging in\");\n        }\n    }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAC9C,OAAO,8BAA8B;AAGrC,MAAMC,MAAM,GAAG,uBAAuB;AAItC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf;EACA;EACA;;EAEA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMY,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACnCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGX,MAAM,iBAAiB,EAAE;QACrDY,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEb,QAAQ;UAAEE;QAAS,CAAC;MAC/C,CAAC,CAAC;MACF,IAAIK,QAAQ,CAACO,EAAE,EAAE;QACb,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCC,QAAQ,CAAC,cAAc,CAAC;MAC5B,CAAC,MAAM,IAAIV,QAAQ,CAACW,MAAM,KAAK,GAAG,EAAE;QAChCvB,KAAK,CAACwB,KAAK,CAAC,uCAAuC,CAAC;MACxD,CAAC,MAAM;QACH,MAAMC,SAAS,GAAG,MAAMb,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvCrB,KAAK,CAACwB,KAAK,CAAC,iBAAiBC,SAAS,EAAE,CAAC;MAC7C;IACJ,CAAC,CAAC,OAAOf,CAAC,EAAE;MACRgB,OAAO,CAACF,KAAK,CAAC,OAAO,EAAEd,CAAC,CAAC;MACzBV,KAAK,CAACwB,KAAK,CAAC,2BAA2B,CAAC;IAC5C;EACJ,CAAC;AACL;AAACpB,EAAA,CA7BQD,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}