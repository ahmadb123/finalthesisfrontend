{"ast":null,"code":"// app.js\n\nconst apiUrl = 'http://localhost:8080';\n\n// Handle registration\ndocument.getElementById('register-form').addEventListener('submit', async e => {\n  e.preventDefault();\n  const username = document.getElementById('register-username').value;\n  const password = document.getElementById('register-password').value;\n  const response = await fetch(`${apiUrl}/api/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  const data = await response.text();\n  alert(`Registration: ${data}`);\n});\n\n// Handle login\nlet token = null;\ndocument.getElementById('login-form').addEventListener('submit', async e => {\n  e.preventDefault();\n  const username = document.getElementById('login-username').value;\n  const password = document.getElementById('login-password').value;\n  const response = await fetch(`${apiUrl}/api/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  if (response.ok) {\n    const data = await response.json();\n    token = data.token;\n    alert('Login successful!');\n  } else {\n    const error = await response.text();\n    alert(`Login failed: ${error}`);\n  }\n});\n\n// Access protected resource\ndocument.getElementById('access-protected').addEventListener('click', async () => {\n  if (!token) {\n    alert('Please log in first.');\n    return;\n  }\n  const response = await fetch(`${apiUrl}/api/protected/resource`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (response.ok) {\n    const data = await response.text();\n    alert(`Protected Resource: ${data}`);\n  } else {\n    const error = await response.text();\n    alert(`Error: ${error}`);\n  }\n});","map":{"version":3,"names":["apiUrl","document","getElementById","addEventListener","e","preventDefault","username","value","password","response","fetch","method","headers","body","JSON","stringify","data","text","alert","token","ok","json","error"],"sources":["/Users/ahmadbishara/Desktop/finalThesisFrontEnd/src/index.js"],"sourcesContent":["// app.js\n\nconst apiUrl = 'http://localhost:8080';\n\n// Handle registration\ndocument.getElementById('register-form').addEventListener('submit', async (e) => {\n    e.preventDefault();\n    const username = document.getElementById('register-username').value;\n    const password = document.getElementById('register-password').value;\n\n    const response = await fetch(`${apiUrl}/api/auth/register`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password }),\n    });\n\n    const data = await response.text();\n    alert(`Registration: ${data}`);\n});\n\n// Handle login\nlet token = null;\n\ndocument.getElementById('login-form').addEventListener('submit', async (e) => {\n    e.preventDefault();\n    const username = document.getElementById('login-username').value;\n    const password = document.getElementById('login-password').value;\n\n    const response = await fetch(`${apiUrl}/api/auth/login`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password }),\n    });\n\n    if (response.ok) {\n        const data = await response.json();\n        token = data.token;\n        alert('Login successful!');\n    } else {\n        const error = await response.text();\n        alert(`Login failed: ${error}`);\n    }\n});\n\n// Access protected resource\ndocument.getElementById('access-protected').addEventListener('click', async () => {\n    if (!token) {\n        alert('Please log in first.');\n        return;\n    }\n\n    const response = await fetch(`${apiUrl}/api/protected/resource`, {\n        method: 'GET',\n        headers: { 'Authorization': `Bearer ${token}` },\n    });\n\n    if (response.ok) {\n        const data = await response.text();\n        alert(`Protected Resource: ${data}`);\n    } else {\n        const error = await response.text();\n        alert(`Error: ${error}`);\n    }\n});\n"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAG,uBAAuB;;AAEtC;AACAC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAOC,CAAC,IAAK;EAC7EA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,MAAMC,QAAQ,GAAGL,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC,CAACK,KAAK;EACnE,MAAMC,QAAQ,GAAGP,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC,CAACK,KAAK;EAEnE,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,MAAM,oBAAoB,EAAE;IACxDW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAET,QAAQ;MAAEE;IAAS,CAAC;EAC/C,CAAC,CAAC;EAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAClCC,KAAK,CAAC,iBAAiBF,IAAI,EAAE,CAAC;AAClC,CAAC,CAAC;;AAEF;AACA,IAAIG,KAAK,GAAG,IAAI;AAEhBlB,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAOC,CAAC,IAAK;EAC1EA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,MAAMC,QAAQ,GAAGL,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACK,KAAK;EAChE,MAAMC,QAAQ,GAAGP,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACK,KAAK;EAEhE,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,MAAM,iBAAiB,EAAE;IACrDW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAET,QAAQ;MAAEE;IAAS,CAAC;EAC/C,CAAC,CAAC;EAEF,IAAIC,QAAQ,CAACW,EAAE,EAAE;IACb,MAAMJ,IAAI,GAAG,MAAMP,QAAQ,CAACY,IAAI,CAAC,CAAC;IAClCF,KAAK,GAAGH,IAAI,CAACG,KAAK;IAClBD,KAAK,CAAC,mBAAmB,CAAC;EAC9B,CAAC,MAAM;IACH,MAAMI,KAAK,GAAG,MAAMb,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACnCC,KAAK,CAAC,iBAAiBI,KAAK,EAAE,CAAC;EACnC;AACJ,CAAC,CAAC;;AAEF;AACArB,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC,CAACC,gBAAgB,CAAC,OAAO,EAAE,YAAY;EAC9E,IAAI,CAACgB,KAAK,EAAE;IACRD,KAAK,CAAC,sBAAsB,CAAC;IAC7B;EACJ;EAEA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,MAAM,yBAAyB,EAAE;IAC7DW,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,eAAe,EAAE,UAAUO,KAAK;IAAG;EAClD,CAAC,CAAC;EAEF,IAAIV,QAAQ,CAACW,EAAE,EAAE;IACb,MAAMJ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCC,KAAK,CAAC,uBAAuBF,IAAI,EAAE,CAAC;EACxC,CAAC,MAAM;IACH,MAAMM,KAAK,GAAG,MAAMb,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACnCC,KAAK,CAAC,UAAUI,KAAK,EAAE,CAAC;EAC5B;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}