{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/finalthesisfrontend/src/pages/Account.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport \"../assets/styles/Account.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { set } from \"mongoose\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiURL = \"http://localhost:8080\";\nfunction Account() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {}, []);\n  const handleValidation = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${apiURL}/api/auth/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        setIsAuthenticated(true);\n      } else if (response.status === 401) {\n        setIsAuthenticated(false);\n        toast.error(\"Incorrect Password/Username. Please try again.\");\n      } else {\n        const textError = await response.text();\n        toast.error(`Login failed: ${textError}`);\n      }\n    } catch {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account-page\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(Account, \"OUkEVH5Ej4otTrVHB7ymRnf16Os=\", false, function () {\n  return [useNavigate];\n});\n_c = Account;\nexport default Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["useEffect","useNavigate","set","jsxDEV","_jsxDEV","apiURL","Account","_s","username","setUsername","useState","password","setPassword","isAuthenticated","setIsAuthenticated","navigate","handleValidation","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","status","toast","error","textError","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/finalthesisfrontend/src/pages/Account.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport \"../assets/styles/Account.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { set } from \"mongoose\";\n\nconst apiURL = \"http://localhost:8080\";\n\n\nfunction Account() {\n    \n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const navigate = useNavigate();\n    useEffect(() => { \n    }, []);\n    const handleValidation = async (e) => {\n        e.preventDefault();\n        try{\n            const response = await fetch(`${apiURL}/api/auth/login`,{\n                method: \"POST\",\n                headers: {\"Content-type\": \"application/json\"},\n                body: JSON.stringify({username, password}),\n            });\n            if(response.ok){\n                setIsAuthenticated(true);\n            }else if(response.status === 401){\n                setIsAuthenticated(false);\n                toast.error(\"Incorrect Password/Username. Please try again.\");\n            }else{\n                const textError = await response.text();\n                toast.error(`Login failed: ${textError}`);\n            }\n        }catch{\n\n        }\n    }\n    return(\n        <div className=\"account-page\">\n            <h1>Your account</h1>\n        </div>\n    )\n}\n\nexport default Account;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,8BAA8B;AACrC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,MAAM,GAAG,uBAAuB;AAGtC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMK,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9BD,SAAS,CAAC,MAAM,CAChB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMgB,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAG;MACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGf,MAAM,iBAAiB,EAAC;QACpDgB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACjB,QAAQ;UAAEG;QAAQ,CAAC;MAC7C,CAAC,CAAC;MACF,IAAGQ,QAAQ,CAACO,EAAE,EAAC;QACXZ,kBAAkB,CAAC,IAAI,CAAC;MAC5B,CAAC,MAAK,IAAGK,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAC;QAC7Bb,kBAAkB,CAAC,KAAK,CAAC;QACzBc,KAAK,CAACC,KAAK,CAAC,gDAAgD,CAAC;MACjE,CAAC,MAAI;QACD,MAAMC,SAAS,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QACvCH,KAAK,CAACC,KAAK,CAAC,iBAAiBC,SAAS,EAAE,CAAC;MAC7C;IACJ,CAAC,OAAK,CAEN;EACJ,CAAC;EACD,oBACI1B,OAAA;IAAK4B,SAAS,EAAC,cAAc;IAAAC,QAAA,eACzB7B,OAAA;MAAA6B,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEd;AAAC9B,EAAA,CAlCQD,OAAO;EAAA,QAKKL,WAAW;AAAA;AAAAqC,EAAA,GALvBhC,OAAO;AAoChB,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}