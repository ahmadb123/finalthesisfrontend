{"ast":null,"code":"var _s = $RefreshSig$();\n// src/pages/LoginPage.js\nimport React, { useState } from 'react';\nconst apiUrl = 'http://localhost:8080';\nfunction LoginPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${apiUrl}/api/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.text();\n        alert('Successful login');\n      } else {\n        const errorText = await response.text();\n        if (errorText.includes(\"Incorrect username or password\")) {\n          alert('Login failed: Incorrect username or password');\n        } else {\n          alert('Login failed: ' + errorText);\n        }\n      }\n    } catch (e) {\n      console.error(\"Error\", e);\n      alert('Error occurred logging in');\n    }\n  };\n}\n_s(LoginPage, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","apiUrl","LoginPage","_s","username","setUsername","password","setPassword","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","text","alert","errorText","includes","console","error","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/finalThesisFrontEnd/src/pages/LoginPage.js"],"sourcesContent":["// src/pages/LoginPage.js\nimport React, { useState } from 'react';\nconst apiUrl = 'http://localhost:8080';\n\nfunction LoginPage() {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleLogin = async(e) =>{        \n        e.preventDefault();\n        try{\n            const response = await fetch(`${apiUrl}/api/auth/login`,{\n            method: 'POST',\n            headers: {'Content-type' : 'application/json'},\n            body: JSON.stringify({username,password}),\n        });\n        if(response.ok){\n            const data = await response.text();\n            alert('Successful login');\n        }else{\n            const errorText = await response.text();\n            if(errorText.includes(\"Incorrect username or password\")){\n                alert('Login failed: Incorrect username or password')\n            }else{\n                alert('Login failed: ' + errorText);\n            }\n        }\n    }catch(e){\n        console.error(\"Error\",e);\n        alert('Error occurred logging in');\n        }\n    };\n}\nexport default LoginPage;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,MAAMC,MAAM,GAAG,uBAAuB;AAEtC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMQ,WAAW,GAAG,MAAMC,CAAC,IAAI;IAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAG;MACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGX,MAAM,iBAAiB,EAAC;QACxDY,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAG;QAAkB,CAAC;QAC9CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACb,QAAQ;UAACE;QAAQ,CAAC;MAC5C,CAAC,CAAC;MACF,IAAGK,QAAQ,CAACO,EAAE,EAAC;QACX,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCC,KAAK,CAAC,kBAAkB,CAAC;MAC7B,CAAC,MAAI;QACD,MAAMC,SAAS,GAAG,MAAMX,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvC,IAAGE,SAAS,CAACC,QAAQ,CAAC,gCAAgC,CAAC,EAAC;UACpDF,KAAK,CAAC,8CAA8C,CAAC;QACzD,CAAC,MAAI;UACDA,KAAK,CAAC,gBAAgB,GAAGC,SAAS,CAAC;QACvC;MACJ;IACJ,CAAC,QAAMb,CAAC,EAAC;MACLe,OAAO,CAACC,KAAK,CAAC,OAAO,EAAChB,CAAC,CAAC;MACxBY,KAAK,CAAC,2BAA2B,CAAC;IAClC;EACJ,CAAC;AACL;AAAClB,EAAA,CA5BQD,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AA6BlB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}