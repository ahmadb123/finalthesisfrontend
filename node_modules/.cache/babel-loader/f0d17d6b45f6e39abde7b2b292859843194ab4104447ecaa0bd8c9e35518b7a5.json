{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/finalThesisFrontEnd/src/pages/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport AppRoutes from \"../routes\";\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { Link } from \"react-router-dom\"; // Import Link\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiURL = 'http://localhost:8080';\n\n//Handle Registeration: \n\n// function  to toggle password visibility - \n\nfunction togglePassword() {\n  let password = document.getElementById(\"passwordInput\");\n  if (password.type === \"password\") {\n    password.type = \"text\";\n  } else {\n    password.type = \"password\";\n  }\n}\nfunction RegisterPage() {\n  _s();\n  let token = null;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = new useNavigate();\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${apiURL}/api/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.text();\n      if (response.ok) {\n        navigate('/login');\n        alert(\"Registration successful: ${data}\");\n      } else {\n        alert(\"Registration failed: ${data}\");\n      }\n    } catch (error) {\n      console.error(\"Error\", error);\n      alert(\"An error occurred during registeration\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register Here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username:(e.g John123)\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password:(e.g Xb12@00)\",\n        value: password,\n        id: \"passwordInput\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onClick: togglePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), \" Show Password\", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Already Registered? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterPage, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","AppRoutes","useNavigate","Link","jsxDEV","_jsxDEV","apiURL","togglePassword","password","document","getElementById","type","RegisterPage","_s","token","username","setUsername","setPassword","navigate","handleRegister","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","text","ok","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","id","onClick","to","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/finalThesisFrontEnd/src/pages/RegisterPage.js"],"sourcesContent":["import React,{useState} from \"react\";\nimport AppRoutes from \"../routes\";\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { Link } from \"react-router-dom\"; // Import Link\n\nconst apiURL = 'http://localhost:8080';\n\n\n//Handle Registeration: \n\n// function  to toggle password visibility - \n\nfunction togglePassword(){\n    let password = document.getElementById(\"passwordInput\");\n    if(password.type === \"password\"){\n        password.type = \"text\";\n    }else{\n        password.type = \"password\";\n    }\n}\n\nfunction RegisterPage(){\n    let token = null; \n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = new useNavigate();\n    const handleRegister = async (e) => {\n        e.preventDefault();\n        try {\n        const response = await fetch(`${apiURL}/api/auth/register`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username, password }),\n        });\n            const data = await response.text();\n            if(response.ok){\n                navigate('/login');\n                alert(\"Registration successful: ${data}\");\n            }else{\n                alert(\"Registration failed: ${data}\");\n            }\n        }catch(error){\n            console.error(\"Error\", error);\n            alert(\"An error occurred during registeration\");\n        }\n    };\n\n    return(\n        <div>\n            <h2>Register Here!</h2>\n            <form onSubmit={handleRegister}>\n                <input \n                type = \"text\"\n                placeholder=\"Username:(e.g John123)\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                />\n                <input \n                type = \"password\"\n                placeholder=\"Password:(e.g Xb12@00)\"\n                value={password}\n                id = \"passwordInput\"\n                onChange={(e) => setPassword(e.target.value)}\n                />\n                <input\n                type = \"checkbox\"\n                onClick={togglePassword}\n                /> Show Password\n\n                <button type = \"submit\">Register</button>\n            </form>\n            <h2>\n                Already Registered? <Link to =\"/login\">Login</Link>\n            </h2>\n        </div>\n    )\n}\n\nexport default RegisterPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}