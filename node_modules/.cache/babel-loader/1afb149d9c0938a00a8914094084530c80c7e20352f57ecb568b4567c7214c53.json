{"ast":null,"code":"const apiUrl = 'http://localhost:8080';\n\n// Handle login\n// Use local storage to store the token for persistence\nlet token = localStorage.getItem('token') || null;\n\n// Registration handler\ndocument.getElementById('register-form').addEventListener('submit', async e => {\n  e.preventDefault();\n  const username = document.getElementById('register-username').value;\n  const password = document.getElementById('register-password').value;\n  try {\n    const response = await fetch(`${apiUrl}/api/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await response.text();\n    if (response.ok) {\n      alert(`Registration successful: ${data}`);\n    } else {\n      alert(`Registration failed: ${data}`);\n    }\n  } catch (error) {\n    console.error('Error:', error);\n    alert('An error occurred during registration.');\n  }\n});\ndocument.getElementById('login-form').addEventListener('submit', async e => {\n  e.preventDefault();\n  const username = document.getElementById('login-username').value;\n  const password = document.getElementById('login-password').value;\n  try {\n    const response = await fetch(`${apiUrl}/api/auth/login`, {\n      method: 'POST',\n      // Use POST for secure login\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      }) // JSON payload with credentials\n    });\n    if (response.ok) {\n      const data = await response.json();\n      token = data.token; // Assuming the response contains a \"token\" field\n      localStorage.setItem('token', token); // Save token to local storage for persistence\n      alert('Login successful');\n    } else {\n      const errorText = await response.text();\n      console.error(`Login failed: ${errorText}`);\n      alert('Login failed: ' + errorText);\n    }\n  } catch (error) {\n    console.error('Error:', error);\n    alert('An error occurred during login.');\n  }\n});\n\n// Access protected resource\ndocument.getElementById('access-protected').addEventListener('click', async () => {\n  // Retrieve token from local storage for better persistence across sessions\n  token = localStorage.getItem('token');\n  if (!token) {\n    alert('Please log in first.');\n    return;\n  }\n  const response = await fetch(`${apiUrl}/api/protected/resource`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}` // Ensure token is passed correctly\n    }\n  });\n  if (response.ok) {\n    const data = await response.text();\n    alert(`Protected Resource: ${data}`);\n  } else {\n    const error = await response.text();\n    alert(`Error: ${error}`);\n  }\n});","map":{"version":3,"names":["apiUrl","token","localStorage","getItem","document","getElementById","addEventListener","e","preventDefault","username","value","password","response","fetch","method","headers","body","JSON","stringify","data","text","ok","alert","error","console","json","setItem","errorText"],"sources":["/Users/ahmadbishara/Desktop/finalThesisFrontEnd/src/index.js"],"sourcesContent":["const apiUrl = 'http://localhost:8080';\n\n// Handle login\n// Use local storage to store the token for persistence\nlet token = localStorage.getItem('token') || null;\n\n// Registration handler\ndocument.getElementById('register-form').addEventListener('submit', async (e) => {\n  e.preventDefault();\n  const username = document.getElementById('register-username').value;\n  const password = document.getElementById('register-password').value;\n\n  try {\n      const response = await fetch(`${apiUrl}/api/auth/register`, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ username, password }),\n      });\n\n      const data = await response.text();\n\n      if (response.ok) {\n          alert(`Registration successful: ${data}`);\n      } else {\n          alert(`Registration failed: ${data}`);\n      }\n  } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred during registration.');\n  }\n});\n\ndocument.getElementById('login-form').addEventListener('submit', async (e) => {\n  e.preventDefault();\n  const username = document.getElementById('login-username').value;\n  const password = document.getElementById('login-password').value;\n\n  try {\n      const response = await fetch(`${apiUrl}/api/auth/login`, {\n          method: 'POST', // Use POST for secure login\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ username, password }), // JSON payload with credentials\n      });\n\n      if (response.ok) {\n          const data = await response.json();\n          token = data.token; // Assuming the response contains a \"token\" field\n          localStorage.setItem('token', token); // Save token to local storage for persistence\n          alert('Login successful');\n      } else {\n          const errorText = await response.text();\n          console.error(`Login failed: ${errorText}`);\n          alert('Login failed: ' + errorText);\n      }\n  } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred during login.');\n  }\n});\n\n// Access protected resource\ndocument.getElementById('access-protected').addEventListener('click', async () => {\n    // Retrieve token from local storage for better persistence across sessions\n    token = localStorage.getItem('token');\n\n    if (!token) {\n        alert('Please log in first.');\n        return;\n    }\n\n    const response = await fetch(`${apiUrl}/api/protected/resource`, {\n        method: 'GET',\n        headers: { \n            'Authorization': `Bearer ${token}` // Ensure token is passed correctly\n        },\n    });\n\n    if (response.ok) {\n        const data = await response.text();\n        alert(`Protected Resource: ${data}`);\n    } else {\n        const error = await response.text();\n        alert(`Error: ${error}`);\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}