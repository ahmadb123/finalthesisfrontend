{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/finalThesisFrontEnd/src/pages/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport AppRoutes from \"../routes\";\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { Link } from \"react-router-dom\"; // Import Link\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../assets/styles/RegisterPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiURL = 'http://localhost:8080';\n\n//Handle Registeration: \n\n// function  to toggle password visibility - \n\nfunction togglePassword() {\n  let password = document.getElementById(\"passwordInput\");\n  if (password.type === \"password\") {\n    password.type = \"text\";\n  } else {\n    password.type = \"password\";\n  }\n}\nfunction RegisterPage() {\n  _s();\n  let token = null;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailAddress, setEmailAddress] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [city, setCity] = useState('');\n  const [country, setCountry] = useState('');\n  const [postalCode, setPostalCode] = useState('');\n  const [state, setState] = useState('');\n  const navigate = new useNavigate();\n  const handleRegister = async e => {\n    e.preventDefault();\n\n    // hanle validation\n    if (username.length < 4) {\n      toast.error(\"Username must be at least 4 characters long\");\n      return;\n    }\n    if (password.length < 6) {\n      const passwordPattern = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).{6,}$/;\n      if (!passwordPattern.test(password)) {\n        toast.error(\"Password must be at least 6 characters long, include at least one uppercase letter, one lowercase letter, and one number.\");\n        return;\n      }\n    }\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailPattern.test(emailAddress)) {\n      toast.error(\"Please enter a valid email address.\");\n      return;\n    }\n    try {\n      const response = await fetch(`${apiURL}/api/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          address: {\n            emailAddress,\n            firstName,\n            lastName,\n            city,\n            country,\n            postalCode,\n            state\n          }\n        })\n      });\n      const data = await response.text();\n      if (response.ok) {\n        navigate('/login');\n        alert(\"Registration successful: ${data}\");\n      } else {\n        alert(\"Registration failed: ${data}\");\n      }\n    } catch (error) {\n      console.error(\"Error\", error);\n      alert(\"An error occurred during registeration\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register Here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username:(e.g John123)\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password:(e.g Xb12@00)\",\n        value: password,\n        id: \"passwordInput\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Email Address:(e.g john@example.com)\",\n        value: emailAddress,\n        onChange: e => setEmailAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"First Name:(e.g John)\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Last Name:(e.g Doe)\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onClick: togglePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), \" Show Password\", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Already Registered? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterPage, \"3ZaarxXPgStkhfWnQZ4FdA0BZEc=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","AppRoutes","useNavigate","Link","toast","ToastContainer","jsxDEV","_jsxDEV","apiURL","togglePassword","password","document","getElementById","type","RegisterPage","_s","token","username","setUsername","setPassword","emailAddress","setEmailAddress","firstName","setFirstName","lastName","setLastName","city","setCity","country","setCountry","postalCode","setPostalCode","state","setState","navigate","handleRegister","e","preventDefault","length","error","passwordPattern","test","emailPattern","response","fetch","method","headers","body","JSON","stringify","address","data","text","ok","alert","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","id","onClick","to","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/finalThesisFrontEnd/src/pages/RegisterPage.js"],"sourcesContent":["import React,{useState} from \"react\";\nimport AppRoutes from \"../routes\";\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { Link } from \"react-router-dom\"; // Import Link\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../assets/styles/RegisterPage.css';\nconst apiURL = 'http://localhost:8080';\n\n\n//Handle Registeration: \n\n// function  to toggle password visibility - \n\nfunction togglePassword(){\n    let password = document.getElementById(\"passwordInput\");\n    if(password.type === \"password\"){\n        password.type = \"text\";\n    }else{\n        password.type = \"password\";\n    }\n}\n\nfunction RegisterPage(){\n    let token = null; \n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [emailAddress, setEmailAddress] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [city , setCity] = useState('');\n    const [country, setCountry] = useState('');\n    const [postalCode, setPostalCode] = useState('');\n    const [state, setState] = useState('');\n    const navigate = new useNavigate();\n    const handleRegister = async (e) => {\n        e.preventDefault();\n\n        // hanle validation\n        if(username.length < 4){\n            toast.error(\"Username must be at least 4 characters long\");\n            return;\n        }\n\n        if(password.length < 6){\n            const passwordPattern = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).{6,}$/;\n            if (!passwordPattern.test(password)) {\n                toast.error(\"Password must be at least 6 characters long, include at least one uppercase letter, one lowercase letter, and one number.\");\n                return;\n            }\n        }\n\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailPattern.test(emailAddress)) {\n            toast.error(\"Please enter a valid email address.\");\n            return;\n        }\n        try {\n        const response = await fetch(`${apiURL}/api/auth/register`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ \n                username, \n                password, \n                address: {\n                    emailAddress, \n                    firstName, \n                    lastName,\n                    city,\n                    country,\n                    postalCode,\n                    state \n                }\n            }),\n        });\n            const data = await response.text();\n            if(response.ok){\n                navigate('/login');\n                alert(\"Registration successful: ${data}\");\n            }else{\n                alert(\"Registration failed: ${data}\");\n            }\n        }catch(error){\n            console.error(\"Error\", error);\n            alert(\"An error occurred during registeration\");\n        }\n    };\n\n    return(\n        <div>\n            <h2>Register Here!</h2>\n            <form onSubmit={handleRegister}>\n                <input \n                type = \"text\"\n                placeholder=\"Username:(e.g John123)\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                />\n                <input \n                type = \"password\"\n                placeholder=\"Password:(e.g Xb12@00)\"\n                value={password}\n                id = \"passwordInput\"\n                onChange={(e) => setPassword(e.target.value)}\n                />\n                <input \n                type = \"text\"\n                placeholder=\"Email Address:(e.g john@example.com)\"\n                value={emailAddress}\n                onChange={(e) => setEmailAddress(e.target.value)}\n                />\n                <input \n                type = \"text\"\n                placeholder=\"First Name:(e.g John)\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n                />\n                <input \n                type = \"text\"\n                placeholder=\"Last Name:(e.g Doe)\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n                />\n                <input\n                type = \"checkbox\"\n                onClick={togglePassword}\n                /> Show Password\n                <button type = \"submit\">Register</button>\n            </form>\n            <h2>\n                Already Registered? <Link to =\"/login\">Login</Link>\n            </h2>\n        </div>\n    )\n}\n\nexport default RegisterPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}